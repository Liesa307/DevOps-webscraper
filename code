using OpenQA.Selenium.Chrome;
using OpenQA.Selenium;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.VisualBasic;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.Security.Cryptography.X509Certificates;
using static System.Net.Mime.MediaTypeNames;

namespace webscraping
{

    public class Program
    {
        public class Itjobs
        {
            public string name { get; set; }
            public string job { get; set; }
            public string location { get; set;}
            public string description { get; set;}
        }

        public class Youtube
        {
            public string name { get; set; }
            public string vieuws { get; set; }
            public string channel { get; set;}
            public string description { get; set;}
        }

        public class HorseRecord
        {
            public string immanr { get; set; }
            public string roepnaam { get; set; }
            public string geboorte { get; set;}
            public string feinummer { get; set;}
            public string ueln { get; set;}
            public string studbook { get; set;}
            public string verantwoordelijke { get; set;}
        }

        public class Jumping
        {
            public string start { get; set; }
            public string eind { get; set; }
            public string name { get; set;}
           
        }

        public static void Main(string[] args)
        {
            
       
        string text;
        Console.WriteLine("Choose your option:");
            Console.WriteLine("1: jumping list");
            Console.WriteLine("2: youtube search");
            Console.WriteLine("3: horse records");
            Console.WriteLine("4: IT jobs");
            Console.Write("Enter your choice: ");
            text = Console.ReadLine();

              if (text == "1"){
                 List<Jumping> jumpingdata = new List<Jumping>();
                IWebDriver driver = new ChromeDriver();
        driver.Navigate().GoToUrl("https://www.sentowerpark.com/nl/events/aankomend");
       
        Thread.Sleep(7000);
                // lijst met de hele tabel zodat we deze kunnen opsplitsen
                IWebElement dates = driver.FindElement(By.XPath("/html/body/div[2]/section[2]/div/div[2]/div[2]/table"));
        // hiermee halen we alle trs uit de tabel wat wil zeggen dat er ook nog onodige informatie zoals lees meer, inschrijven, etc in zit
        List<IWebElement> datesList = new List<IWebElement>(dates.FindElements(By.TagName("tr")));

        // we maken een variabele lines aan. Dit is een lijst waar alle substrings inkomen
        var lines = new List<string> { "Start \t Eind \t Event \n" };

                // nu gaan we met een foreach alle 'datums' uit de lijst halen



 foreach (var date in datesList){
                  
                    // we maken een text variabele van onze tr zodat we ermee kunnen werken
                    var jumping = date.Text;

        // het eerste onnodige woord is startlijst dus dit wordt onze eerste index
        var word = "startlijst";
        int first = jumping.IndexOf(word);




                    // alleen als onze slice groter is dan 0 printen we onze substring die loopt van 0 tot onze index af
                    if (first > 0)
                    {
                        Console.WriteLine(jumping.Substring(0, first));
                        lines.Add(jumping.Substring(0, first));
                    }
                     List<IWebElement> td = new List<IWebElement>(date.FindElements(By.TagName("td")));
                    if (td.Count > 0) { 
         jumpingdata.Add(new Jumping()
    {
        start = td[2].Text,
        eind = td[3].Text,
        name = td[4].Text
        

        
    });}




}


try
{
    System.IO.File.WriteAllLines(@"C:\Users\Eigenaar\source\repos\webscraper5.0\webscraper5.0\jumping.txt", lines);
    Console.WriteLine("Lines written to file jumping.txt successfully.");
    string json = JsonSerializer.Serialize(jumpingdata);
    File.WriteAllText(@"C:\Users\Eigenaar\source\repos\webscraper5.0\webscraper5.0\jumping.json", json);
   
    Console.WriteLine("Lines written to file jumping.json successfully.");
}
catch (Exception err)
{
    Console.WriteLine(err.Message);

}
                
            }    
               

  if (text == "2")
{
    List<Youtube> youtube = new List<Youtube>();
    IWebDriver driver2 = new ChromeDriver();
    driver2.Navigate().GoToUrl("https://youtube.com/");
    Thread.Sleep(7000);
    IWebElement search = driver2.FindElement(By.XPath("/html/body/ytd-app/div[1]/div/ytd-masthead/div[3]/div[2]/ytd-searchbox"));
    search.Click();
    search.SendKeys("horse\n");
    Thread.Sleep(4000);
    IWebElement filter = driver2.FindElement(By.XPath("/html/body/ytd-app/div[1]/ytd-page-manager/ytd-search/div[1]/ytd-two-column-search-results-renderer/div[2]/div/ytd-section-list-renderer/div[1]/div[2]/ytd-search-sub-menu-renderer/div[1]/div/ytd-toggle-button-renderer/yt-button-shape/button/yt-touch-feedback-shape/div/div[2]"));
    filter.Click();
    IWebElement relevant = driver2.FindElement(By.XPath("/html/body/ytd-app/div[1]/ytd-page-manager/ytd-search/div[1]/ytd-two-column-search-results-renderer/div[2]/div/ytd-section-list-renderer/div[1]/div[2]/ytd-search-sub-menu-renderer/div[1]/iron-collapse/div/ytd-search-filter-group-renderer[1]/ytd-search-filter-renderer[1]/a/div/yt-formatted-string"));
    relevant.Click();
    Thread.Sleep(2000); 
    
    
    List<IWebElement> videos = new List<IWebElement>(driver2.FindElements(By.CssSelector("#contents > ytd-video-renderer")));


    foreach (var element in videos)
    {

        
         Console.WriteLine(element.Text);
         youtube.Add(new Youtube()
    {
        name = element.FindElement(By.Id("video-title")).Text,
        vieuws = element.FindElement(By.Id("metadata-line")).Text,
        channel = element.FindElement(By.Id("text")).Text,
        description = element.FindElement(By.Id("description-text")).Text
    });
    }

    try
    {
    string json = JsonSerializer.Serialize(youtube);
    File.WriteAllText(@"C:\Users\Eigenaar\source\repos\webscraper5.0\webscraper5.0\youtube.json", json);
    Console.WriteLine("Lines written to file youtube.json successfully.");
   
    
    }
    catch (Exception err)
    {
    Console.WriteLine(err.Message);

    }



}


if (text == "3")
{
     List<HorseRecord> horserecord = new List<HorseRecord>();
    Console.WriteLine("You want to search for your horses info?");
    Console.Write("Please enter the full name of the horse: ");
    string horse = Console.ReadLine();
    Thread.Sleep(1000);
    IWebDriver driver3 = new ChromeDriver();
    driver3.Navigate().GoToUrl("https://app.equibel.be/prg/horses/search.php?lng=NL");
    Thread.Sleep(7000);
    IWebElement roepnaam = driver3.FindElement(By.XPath("/html/body/section/div/div/form/fieldset/table/tbody/tr[2]/td[2]/input"));
    roepnaam.Click();
    roepnaam.SendKeys(horse);
    IWebElement submit = driver3.FindElement(By.XPath("/html/body/section/div/div/form/div/input"));
    submit.Click();
    Thread.Sleep(2000);
    IWebElement info = driver3.FindElement(By.XPath("/html/body/section/div/div/table"));
    List<IWebElement> results = new List<IWebElement>(info.FindElements(By.TagName("tr")));
    foreach (var result in results)
    {
        
        Console.WriteLine(result.Text);
        List<IWebElement> td = new List<IWebElement>(result.FindElements(By.TagName("td")));
        if (td.Count > 0)
                    {
                                 horserecord.Add(new HorseRecord()
    {
        immanr = td[0].Text,
        roepnaam = td[1].Text,
        geboorte = td[2].Text,
        feinummer = td[3].Text,
        ueln = td[4].Text,
        studbook = td[5].Text,
        verantwoordelijke = td[6].Text


    });
                    }

    }

     try
    {
    string json = JsonSerializer.Serialize(horserecord);
    File.WriteAllText(@"C:\Users\Eigenaar\source\repos\webscraper5.0\webscraper5.0\horserecord.json", json);
    Console.WriteLine("Lines written to file horserecord.json successfully.");
   
    
    }
    catch (Exception err)
    {
    Console.WriteLine(err.Message);

    }

    

}


if (text == "4")
{
    List<Itjobs> itjobs = new List<Itjobs>();
    Console.Write("Please enter your it job: ");
    string jobname = Console.ReadLine();
    IWebDriver driver4 = new ChromeDriver();
    driver4.Navigate().GoToUrl("https://www.ictjob.be/nl/");
    Thread.Sleep(10000);
    var zoek = driver4.FindElement(By.XPath("/html/body/section/div[1]/div/div[2]/div[1]/div/section/form/div/div/div[3]/div[2]/div[1]/div[1]/div/div[1]/label/input"));
    zoek.SendKeys(jobname);
    zoek.Submit();
    Thread.Sleep(8000);
   
   
    var name1 = driver4.FindElement(By.XPath("/html/body/section/div[1]/div/div[2]/div/div/form/div[2]/div/div/div[2]/section/div/div[2]/div[1]/div/ul/li[1]/span[2]/a/h2"));
    var jobit1 = driver4.FindElement(By.XPath("/html/body/section/div[1]/div/div[2]/div/div/form/div[2]/div/div/div[2]/section/div/div[2]/div[1]/div/ul/li[1]/span[2]/span[1]"));
    var location1 = driver4.FindElement(By.XPath("/html/body/section/div[1]/div/div[2]/div/div/form/div[2]/div/div/div[2]/section/div/div[2]/div[1]/div/ul/li[1]/span[2]/span[2]/span[2]/span/span"));
    var description1 = driver4.FindElement(By.XPath("/html/body/section/div[1]/div/div[2]/div/div/form/div[2]/div/div/div[2]/section/div/div[2]/div[1]/div/ul/li[1]/span[2]/span[3]"));

    var name2 = driver4.FindElement(By.XPath("/html/body/section/div[1]/div/div[2]/div/div/form/div[2]/div/div/div[2]/section/div/div[2]/div[1]/div/ul/li[2]/span[2]/a/h2"));
    var jobit2 = driver4.FindElement(By.XPath("/html/body/section/div[1]/div/div[2]/div/div/form/div[2]/div/div/div[2]/section/div/div[2]/div[1]/div/ul/li[2]/span[2]/span[1]"));
    var location2 = driver4.FindElement(By.XPath("/html/body/section/div[1]/div/div[2]/div/div/form/div[2]/div/div/div[2]/section/div/div[2]/div[1]/div/ul/li[2]/span[2]/span[2]/span[2]/span/span"));
    var description2 = driver4.FindElement(By.XPath("/html/body/section/div[1]/div/div[2]/div/div/form/div[2]/div/div/div[2]/section/div/div[2]/div[1]/div/ul/li[2]/span[2]/span[3]"));

    var name3 = driver4.FindElement(By.XPath("/html/body/section/div[1]/div/div[2]/div/div/form/div[2]/div/div/div[2]/section/div/div[2]/div[1]/div/ul/li[3]/span[2]/a/h2"));
    var jobit3 = driver4.FindElement(By.XPath("/html/body/section/div[1]/div/div[2]/div/div/form/div[2]/div/div/div[2]/section/div/div[2]/div[1]/div/ul/li[3]/span[2]/span[1]"));
    var location3 = driver4.FindElement(By.XPath("/html/body/section/div[1]/div/div[2]/div/div/form/div[2]/div/div/div[2]/section/div/div[2]/div[1]/div/ul/li[3]/span[2]/span[2]/span[2]/span/span"));
    var description3 = driver4.FindElement(By.XPath("/html/body/section/div[1]/div/div[2]/div/div/form/div[2]/div/div/div[2]/section/div/div[2]/div[1]/div/ul/li[3]/span[2]/span[3]"));

    var name4 = driver4.FindElement(By.XPath("/html/body/section/div[1]/div/div[2]/div/div/form/div[2]/div/div/div[2]/section/div/div[2]/div[1]/div/ul/li[5]/span[2]/a/h2"));
    var jobit4 = driver4.FindElement(By.XPath("/html/body/section/div[1]/div/div[2]/div/div/form/div[2]/div/div/div[2]/section/div/div[2]/div[1]/div/ul/li[5]/span[2]/span[1]"));
    var location4 = driver4.FindElement(By.XPath("/html/body/section/div[1]/div/div[2]/div/div/form/div[2]/div/div/div[2]/section/div/div[2]/div[1]/div/ul/li[5]/span[2]/span[2]/span[2]/span/span"));
    var description4 = driver4.FindElement(By.XPath("/html/body/section/div[1]/div/div[2]/div/div/form/div[2]/div/div/div[2]/section/div/div[2]/div[1]/div/ul/li[5]/span[2]/span[3]"));

    var name5 = driver4.FindElement(By.XPath("/html/body/section/div[1]/div/div[2]/div/div/form/div[2]/div/div/div[2]/section/div/div[2]/div[1]/div/ul/li[6]/span[2]/a/h2"));
    var jobit5 = driver4.FindElement(By.XPath("/html/body/section/div[1]/div/div[2]/div/div/form/div[2]/div/div/div[2]/section/div/div[2]/div[1]/div/ul/li[6]/span[2]/span[1]"));
    var location5 = driver4.FindElement(By.XPath("/html/body/section/div[1]/div/div[2]/div/div/form/div[2]/div/div/div[2]/section/div/div[2]/div[1]/div/ul/li[6]/span[2]/span[2]/span[2]/span/span"));
    var description5 = driver4.FindElement(By.XPath("/html/body/section/div[1]/div/div[2]/div/div/form/div[2]/div/div/div[2]/section/div/div[2]/div[1]/div/ul/li[6]/span[2]/span[3]"));

    
    itjobs.Add(new Itjobs()
    {
        name = name1.Text,
        job = jobit1.Text,
        location = location1.Text,
        description = description1.Text
    });

    itjobs.Add(new Itjobs()
    {
        name = name2.Text,
        job = jobit2.Text,
        location = location2.Text,
        description = description2.Text
                });
    itjobs.Add(new Itjobs()
    {
        name = name3.Text,
        job = jobit3.Text,
        location = location3.Text,
        description = description3.Text
                });
    itjobs.Add(new Itjobs()
    {
        name = name4.Text,
        job = jobit4.Text,
        location = location4.Text,
        description = description4.Text
                });
    itjobs.Add(new Itjobs()
    {
        name = name5.Text,
        job = jobit5.Text,
        location = location5.Text,
        description = description5.Text
                });
    
    
    
    

    
    try
    {
    string json = JsonSerializer.Serialize(itjobs);
    File.WriteAllText(@"C:\Users\Eigenaar\source\repos\webscraper5.0\webscraper5.0\itjobs.json", json);
    Console.WriteLine("Lines written to file itjobs.json successfully.");
   
    
    }
    catch (Exception err)
    {
    Console.WriteLine(err.Message);

    }
       


















}



        }
    }
}

